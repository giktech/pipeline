<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.1009.2120                               -->
<workbook original-version='18.1' source-build='2018.2.3 (20182.18.1009.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.11ngacc02m8ov91aqp2wr0q8f3pt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='semistructpassivestore-direct.08lx1o21m23zhx161ilbo0cunnyn'>
            <connection class='semistructpassivestore-direct' directory='E:/_FRESH START/MIDS/W209/pipeline' filename='data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data.json]'>
                  <map key='data' value='true' />
                  <map key='data.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.08lx1o21m23zhx161ilbo0cunnyn' name='data.json' table='[data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[data.json].[Document Index (generated)]' />
          <map key='[data Index (generated)]' value='[data.json].[data.Index (generated)]' />
          <map key='[stageNum]' value='[data.json].[data.Value.stageNum]' />
          <map key='[timestamp]' value='[data.json].[data.Value.timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[data Index (generated)]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>data.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.Value.stageNum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stageNum]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>data.Value.stageNum</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.Value.timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[data.json]</parent-name>
            <remote-alias>data.Value.timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per data]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([data Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at data level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[data Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>data.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Stage Num' datatype='real' name='[stageNum]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>data.Value.stageNum</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.Value.timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Data' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[data Index (generated)]' type='field' />
        <folder-item name='[stageNum]' type='field' />
        <folder-item name='[timestamp]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stage 1 Timeline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.11ngacc02m8ov91aqp2wr0q8f3pt' />
          </datasources>
          <datasource-dependencies datasource='federated.11ngacc02m8ov91aqp2wr0q8f3pt'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[stageNum]' derivation='None' name='[none:stageNum:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Stage Num' datatype='real' name='[stageNum]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>data.Value.stageNum</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp' datatype='datetime' datatype-customized='true' name='[timestamp]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>data.Value.timestamp</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[timestamp]' derivation='Minute-Trunc' name='[tmi:timestamp:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[none:stageNum:ok]'>
            <groupfilter function='member' level='[none:stageNum:ok]' member='1.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[none:stageNum:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[sum:Number of Records:qk]</rows>
        <cols>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[tmi:timestamp:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[mi:timestamp:ok]</field>
            <field>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[none:data Index (generated):ok]</field>
            <field>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[none:stageNum:ok]</field>
            <field>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[none:timestamp:nk]</field>
            <field>[federated.11ngacc02m8ov91aqp2wr0q8f3pt].[tsc:timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
